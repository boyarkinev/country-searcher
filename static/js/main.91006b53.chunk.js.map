{"version":3,"sources":["components/CountryDetails/CountryDetails.jsx","components/SearchResult/SearchResult.jsx","store/actions/changeInputValueAction.js","store/actionCreators/changeInputActionCreator.js","store/actions/changeCountriesData.js","store/actionCreators/changeCountriesDataActionCreator.js","store/mapDispatchToProps.js","store/mapStateToProps.js","components/ResultList/ResultList.jsx","utils/validators.js","services/countriesApi.js","components/SearchForm/SearchForm.jsx","components/SearchForm/SearchFormContainer.jsx","components/CountrySearch/CountrySearch.jsx","components/CountrySearch/CountrySearchContainer.jsx","components/App.js","store/initialState.js","store/reducers/inputValueReducer.js","store/reducers/countriesDataReducer.js","store/reducers/reducers.js","store/store.js","index.js"],"names":["CountryDetails","props","country","isActive","className","cn","isShown","region","population","area","timezones","map","timezone","alpha2Code","topLevelDomain","SearchResult","name","capital","flag","useState","setIsActive","onClick","event","target","src","alt","CHANGE_INPUT_VALUE_CATION","changeInputActionCreator","inputValue","type","payload","CHANGE_COUNTRIES_DATA","changeCountriesDataActionCreator","data","mapDispatchToProps","component","dispatch","changeInputValue","bindActionCreators","changeData","mapStateToProps","state","input","countriesData","ResultList","defaultValue","onChange","value","isEng","text","test","api","countriesApi","a","fetch","res","ok","Promise","reject","status","json","SearchForm","warn","placeholder","trim","then","catch","err","console","log","handleListClipping","SearchFormContainer","connect","CountrySearch","customSelectValue","setCustomSelectValue","CountriesList","numericCode","slice","CountrySearchContainer","App","initialState","inputValueReducer","action","countriesDataReducer","reducers","combineReducers","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91006b53.chunk.js","sourcesContent":["import './CountryDetails.css'\n\nimport React from 'react';\nimport cn from 'classnames';\n\nconst CountryDetails = (props) => {\n\n  const { country, isActive } = props;\n\n  return (\n    <>\n      <ul className={cn('search-result desktop', { isShown: isActive })}>\n        <li className='search-result__header'>Region</li>\n        <li className='search-result__header'>Population</li>\n        <li className='search-result__header'>Area</li>\n        <li className='search-result__header'>Time Zones</li>\n        <li className='search-result__header'>Code</li>\n        <li className='search-result__header'>Domain</li>\n        <li className='search-result__text'>{country.region}</li>\n        <li className='search-result__text'>{country.population}</li>\n        <li className='search-result__text'>{country.area}</li>\n        <li className='search-result__text'>\n          {country.timezones.map(timezone => (\n            <p className='search-result__text' key={timezone} >{timezone}</p>\n          ))}\n        </li>\n        <li className='search-result__text'>{country.alpha2Code}</li>\n        <li className='search-result__text'>{country.topLevelDomain}</li>\n      </ul>\n\n      <ul className={cn('search-result mobile', { isShown: isActive })}>\n        <li className='search-result__header mobile'>Region</li>\n        <li className='search-result__text mobile'>{country.region}</li>\n        <li className='search-result__header mobile'>Population</li>\n        <li className='search-result__text mobile'>{country.population}</li>\n        <li className='search-result__header mobile'>Area</li>\n        <li className='search-result__text mobile'>{country.area}</li>\n        <li className='search-result__header mobile'>Time Zones</li>\n        <li className='search-result__text mobile'>\n          {country.timezones.map(timezone => (\n            <p className='search-result__text' key={timezone} >{timezone}</p>\n          ))}\n        </li>\n        <li className='search-result__header mobile'>Code</li>\n        <li className='search-result__text mobile'>{country.alpha2Code}</li>\n        <li className='search-result__header mobile'>Domain</li>\n        <li className='search-result__text mobile'>{country.topLevelDomain}</li>\n      </ul>\n    </>\n  );\n}\n\nexport default CountryDetails;","import './SearchResult.css';\r\n\r\nimport React, { useState } from 'react';\r\nimport CountryDetails from '../CountryDetails/CountryDetails';\r\n\r\nconst SearchResult = (props) => {\r\n\r\n  // console.log(props)\r\n\r\n  const { name, capital, flag } = props.country;\r\n  const [ isActive, setIsActive ] = useState(false);\r\n  \r\n  const handleCleanSearch = (event) => {\r\n    return !isActive\r\n      ? event.target && setIsActive(true)\r\n      : event.target && setIsActive(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <li className='item-container' onClick={handleCleanSearch}>\r\n      <p className='text'>{name}</p>\r\n      <p className='text'>{capital}</p>\r\n      <img src={flag} alt='Flag' className='flag' />\r\n    </li>\r\n    {\r\n      <CountryDetails country={ props.country } isActive={isActive} />\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchResult;","const CHANGE_INPUT_VALUE_CATION = 'CHANGE_INPUT_VALUE_CATION';\n\nexport default CHANGE_INPUT_VALUE_CATION;","import CHANGE_INPUT_VALUE_CATION from '../actions/changeInputValueAction';\n\nconst changeInputActionCreator = inputValue => {\n  return { \n    type: CHANGE_INPUT_VALUE_CATION,\n    payload: inputValue\n  };\n}\n\nexport default changeInputActionCreator;","const CHANGE_COUNTRIES_DATA = 'CHANGE_COUNTRIES_DATA';\n\nexport default CHANGE_COUNTRIES_DATA;","import CHANGE_COUNTRIES_DATA from '../actions/changeCountriesData';\n\nconst changeCountriesDataActionCreator = data => {\n  return { \n    type: CHANGE_COUNTRIES_DATA,\n    payload: data\n  };\n}\n\nexport default changeCountriesDataActionCreator;","import { bindActionCreators } from 'redux';\nimport changeInputActionCreator from './actionCreators/changeInputActionCreator';\nimport changeCountriesDataActionCreator from './actionCreators/changeCountriesDataActionCreator';\n\nconst mapDispatchToProps = (component) => {\n\tswitch (component) {\n\t\tcase 'SearchForm': {\n\t\t\treturn dispatch => {\n\t\t\t\treturn {\n\t\t\t\t\tchangeInputValue: bindActionCreators(changeInputActionCreator, dispatch),\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tcase 'CountrySearch': {\n\t\t\treturn dispatch => {\n\t\t\t\treturn {\n\t\t\t\t\tchangeData: bindActionCreators(changeCountriesDataActionCreator, dispatch),\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tdefault: return undefined;\n\t}\n};\n\nexport default mapDispatchToProps;\n","const mapStateToProps = (component) => {\n\tswitch(component) {\n\t\tcase 'SearchForm': {\n\t\t\treturn state => {\n\t\t\t\treturn {\n\t\t\t\t\tinputValue: state.input.inputValue,\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'CountrySearch': {\n\t\t\treturn state => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: state.data.countriesData, // Пришло из reducers\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tdefault: return undefined;\n\t}\n};\n\nexport default mapStateToProps;\n","import './ResultList.css'\r\n\r\nimport React from 'react';\r\n\r\nconst ResultList = (props) => {\r\n\r\n  return (\r\n    <select className='select' defaultValue=\"50\" onChange={props.onChange}>\r\n      <option value=\"10\">10</option>\r\n      <option value=\"20\">20</option>\r\n      <option value=\"50\">50</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default ResultList;","const isEng = (text) => {\n  return /[a-z]/i.test(text)\n}\n\nexport default isEng;","const api = {\n  url: 'https://restcountries.eu/rest/v2/'\n}\n\nconst countriesApi = async (value) => {\n  const res = await fetch(`${api.url}name/${value}`);\n  if (!res.ok) {\n    return Promise.reject(`Неверный запрос. Ошибка: ${res.status}`);\n  }\n  return res.json();\n};\n\nexport default countriesApi;","import './SearchForm.css'\n\nimport React, { useState } from 'react';\nimport ResultList from '../ResultList/ResultList'\nimport isEng from '../../utils/validators';\nimport cn from 'classnames';\nimport countriesApi from '../../services/countriesApi';\n\nconst SearchForm = (props) => {\n\n  const { inputValue, changeInputValue, countriesData } = props;\n  const [ isActive, setIsActive ] = useState(false);\n\n  const handleInputChange = (event) => {\n    \n    if (!isEng(event.target.value || event.target.value === '')) {\n      return event.target.value.trim() && setIsActive(true);\n    } else {\n      setIsActive(false);\n    }\n\n    changeInputValue(event.target.value)\n\n    event.target.value === ''\n    ? countriesData.changeData([])\n    : countriesApi(event.target.value)\n      .then(res => {\n        countriesData.changeData(res);\n      })\n      .catch(err => {console.log(err)});\n  }\n\n  return (\n    <>\n      <span className={cn('message-rule', { warn: isActive })}>\n        The text must be typed in Latin letters\n      </span>\n      <form className='form'>\n        <input\n          type='text'\n          placeholder='Search...'\n          onChange={handleInputChange}\n          value={inputValue}\n          className='input'\n        />\n        <ResultList onChange={props.handleListClipping} />\n      </form>\n    </>\n  )\n}\nexport default SearchForm;","import { connect } from 'react-redux';\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\nimport mapStateToProps from '../../store/mapStateToProps';\nimport SearchForm from './SearchForm';\n\nconst SearchFormContainer = connect(mapStateToProps('SearchForm'), mapDispatchToProps('SearchForm'))(SearchForm);\n\nexport default SearchFormContainer;","import './CountrySearch.css';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport SearchResult from '../SearchResult/SearchResult';\r\nimport SearchFormContainer from '../SearchForm/SearchFormContainer';\r\n\r\nconst CountrySearch = (props) => {\r\n\r\n  const { data } = props\r\n  const [customSelectValue, setCustomSelectValue] = useState('50');\r\n  \r\n  const handleListClipping = (event) => {\r\n    setCustomSelectValue(event.target.value);\r\n    CountriesList.slice(0, `${event.target.value}`);\r\n  };\r\n  \r\n  const CountriesList = data.map(country => (\r\n    <SearchResult country={country} key={country.numericCode} />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div className='search-items'>\r\n        <h1 className='title'>Country Search Service</h1>\r\n\r\n        <SearchFormContainer\r\n          countriesData={props}\r\n          handleListClipping={handleListClipping}\r\n        />\r\n\r\n        <ul className='list'>\r\n          {CountriesList.slice(0, `${customSelectValue}`)}\r\n        </ul>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountrySearch;\r\n","import { connect } from 'react-redux';\r\nimport CountrySearch from './CountrySearch';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst CountrySearchContainer = connect(mapStateToProps('CountrySearch'), mapDispatchToProps('CountrySearch'))(CountrySearch);\r\n\r\nexport default CountrySearchContainer;","import './App.css';\r\n\r\nimport React from 'react';\r\n\r\nimport CountrySearchContainer from './CountrySearch/CountrySearchContainer';\r\n\r\nconst App = (props) => {\r\n\r\n  return (\r\n    <div className='App'>\r\n      <CountrySearchContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const initialState = {\n  inputValue: '',\n  countriesData: [],\n};\n\nexport default initialState;","import CHANGE_INPUT_VALUE_CATION from '../actions/changeInputValueAction';\nimport initialState from '../initialState';\n\nconst inputValueReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_INPUT_VALUE_CATION:\n      return { ...state, inputValue: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default inputValueReducer;\n","import CHANGE_COUNTRIES_DATA from '../actions/changeCountriesData';\nimport initialState from '../initialState';\n\nconst countriesDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_COUNTRIES_DATA:\n      return { ...state, countriesData: action.payload };\n              /* Взяли state целиком, раскукожили и заменили\n              в нем значение countriesData значением\n              из changeCountriesDataActionCreator */\n    default:\n      return state;\n  }\n};\n\nexport default countriesDataReducer;\n","import { combineReducers } from 'redux';\nimport inputValueReducer from './inputValueReducer';\nimport countriesDataReducer from './countriesDataReducer';\n\nconst reducers = combineReducers({\n  input: inputValueReducer,\n  data: countriesDataReducer,\n});\n\nexport default reducers;","import { createStore } from 'redux';\n\nimport reducers from './reducers/reducers';\n\nconst store = createStore(reducers);\n\nwindow.store = store;\n\nexport default store;\n","// Стили\nimport './index.css';\n\n// Компоненты React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n\n// Компоненты приложения\nimport App from './components/App';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n"],"sourceRoot":""}