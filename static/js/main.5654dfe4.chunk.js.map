{"version":3,"sources":["components/CountryDetails/CountryDetails.jsx","components/SearchResult/SearchResult.jsx","store/actions/changeInputValueAction.js","store/actionCreators/changeInputActionCreator.js","store/actions/changeCountriesDataAction.js","store/actionCreators/changeCountriesDataActionCreator.js","store/actions/toggleIsFetchingAction.js","store/actionCreators/toggleIsFetchingActionCreator.js","store/mapDispatchToProps.js","store/mapStateToProps.js","components/ListFilter/ListFilter.jsx","utils/validators.js","services/countriesApi.js","commons/Preloader/Preloader.jsx","components/SearchForm/SearchForm.jsx","components/SearchForm/SearchFormContainer.jsx","images/world.svg","components/WorldMap/WorldMap.jsx","components/CountrySearch/CountrySearch.jsx","components/CountrySearch/CountrySearchContainer.jsx","components/App.js","store/initialState.js","store/reducers/inputValueReducer.js","store/reducers/countriesDataReducer.js","store/reducers/toggleIsFetchingReducer.js","store/reducers/reducers.js","store/store.js","index.js"],"names":["CountryDetails","props","country","isActive","className","cn","isShown","region","population","area","timezones","map","timezone","alpha2Code","topLevelDomain","SearchResult","name","capital","flag","useState","setIsActive","handleCleanSearch","event","target","onClick","onKeyPress","tabIndex","src","alt","CHANGE_INPUT_VALUE_ACTION","changeInputActionCreator","inputValue","type","payload","CHANGE_COUNTRIES_DATA_ACTION","changeCountriesDataActionCreator","data","TOGGLE_IS_FETCHING_ACTION","toggleIsFetchingActionCreator","value","mapDispatchToProps","component","dispatch","changeInputValue","bindActionCreators","toggleIsFetching","changeData","mapStateToProps","state","input","isFetching","fetching","countriesData","ListFilter","defaultValue","onChange","isEng","text","test","api","countriesApi","a","fetch","res","ok","Promise","reject","status","json","override","css","Preloader","size","color","loading","SearchForm","warn","placeholder","trim","then","catch","err","console","log","handleListClipping","SearchFormContainer","connect","WorldMap","world","CountrySearch","customSelectValue","setCustomSelectValue","CountriesList","numericCode","slice","CountrySearchContainer","App","initialState","inputValueReducer","action","countriesDataReducer","toggleIsFetchingReducer","reducers","combineReducers","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5654dfe4.chunk.js","sourcesContent":["import './CountryDetails.css'\n\nimport React from 'react';\nimport cn from 'classnames';\n\nconst CountryDetails = (props) => {\n\n  const { country, isActive } = props;\n\n  return (\n    <>\n      <ul className={cn('search-result desktop', { isShown: isActive })}>\n        <li className='search-result__header'>Region</li>\n        <li className='search-result__header'>Population</li>\n        <li className='search-result__header'>Area</li>\n        <li className='search-result__header'>Time Zones</li>\n        <li className='search-result__header'>Code</li>\n        <li className='search-result__header'>Domain</li>\n        <li className='search-result__text'>{country.region}</li>\n        <li className='search-result__text'>{country.population}</li>\n        <li className='search-result__text'>{country.area}</li>\n        <li className='search-result__text'>\n          {country.timezones.map(timezone => (\n            <p className='search-result__text' key={timezone} >{timezone}</p>\n          ))}\n        </li>\n        <li className='search-result__text'>{country.alpha2Code}</li>\n        <li className='search-result__text'>{country.topLevelDomain}</li>\n      </ul>\n\n      <ul className={cn('search-result mobile', { isShown: isActive })}>\n        <li className='search-result__header mobile'>Region</li>\n        <li className='search-result__text mobile'>{country.region}</li>\n        <li className='search-result__header mobile'>Population</li>\n        <li className='search-result__text mobile'>{country.population}</li>\n        <li className='search-result__header mobile'>Area</li>\n        <li className='search-result__text mobile'>{country.area}</li>\n        <li className='search-result__header mobile'>Time Zones</li>\n        <li className='search-result__text mobile'>\n          {country.timezones.map(timezone => (\n            <p className='search-result__text' key={timezone} >{timezone}</p>\n          ))}\n        </li>\n        <li className='search-result__header mobile'>Code</li>\n        <li className='search-result__text mobile'>{country.alpha2Code}</li>\n        <li className='search-result__header mobile'>Domain</li>\n        <li className='search-result__text mobile'>{country.topLevelDomain}</li>\n      </ul>\n    </>\n  );\n}\n\nexport default CountryDetails;","import './SearchResult.css';\r\n\r\nimport React, { useState } from 'react';\r\nimport CountryDetails from '../CountryDetails/CountryDetails';\r\n\r\nconst SearchResult = (props) => {\r\n\r\n  const { name, capital, flag } = props.country;\r\n  const [ isActive, setIsActive ] = useState(false);\r\n  \r\n  const handleCleanSearch = (event) => {\r\n    return !isActive\r\n      ? event.target && setIsActive(true)\r\n      : event.target && setIsActive(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <li className='item-container' onClick={handleCleanSearch} onKeyPress={handleCleanSearch} tabIndex='0'>\r\n      <p className='text'>{name}</p>\r\n      <p className='text'>{capital}</p>\r\n      <img src={flag} alt='Flag' className='flag' />\r\n    </li>\r\n    {\r\n      <CountryDetails country={ props.country } isActive={isActive} />\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchResult;","const CHANGE_INPUT_VALUE_ACTION = 'CHANGE_INPUT_VALUE_ACTION';\n\nexport default CHANGE_INPUT_VALUE_ACTION;","import CHANGE_INPUT_VALUE_ACTION from '../actions/changeInputValueAction';\n\nconst changeInputActionCreator = inputValue => {\n  return { \n    type: CHANGE_INPUT_VALUE_ACTION,\n    payload: inputValue\n  };\n}\n\nexport default changeInputActionCreator;","const CHANGE_COUNTRIES_DATA_ACTION = 'CHANGE_COUNTRIES_DATA_ACTION';\n\nexport default CHANGE_COUNTRIES_DATA_ACTION;","import CHANGE_COUNTRIES_DATA_ACTION from '../actions/changeCountriesDataAction';\n\nconst changeCountriesDataActionCreator = (data) => {\n  return { \n    type: CHANGE_COUNTRIES_DATA_ACTION,\n    payload: data,\n  };\n}\n\nexport default changeCountriesDataActionCreator;","const TOGGLE_IS_FETCHING_ACTION = 'TOGGLE_IS_FETCHING';\n\nexport default TOGGLE_IS_FETCHING_ACTION;","import TOGGLE_IS_FETCHING_ACTION from '../actions/toggleIsFetchingAction';\n\nconst toggleIsFetchingActionCreator = value => {\n  return { \n    type: TOGGLE_IS_FETCHING_ACTION,\n    payload: value\n  };\n}\n\nexport default toggleIsFetchingActionCreator;","import { bindActionCreators } from 'redux';\nimport changeInputActionCreator from './actionCreators/changeInputActionCreator';\nimport changeCountriesDataActionCreator from './actionCreators/changeCountriesDataActionCreator';\nimport toggleIsFetchingActionCreator from './actionCreators/toggleIsFetchingActionCreator';\n\nconst mapDispatchToProps = (component) => {\n\tswitch (component) {\n\t\tcase 'SearchForm': {\n\t\t\treturn dispatch => {\n\t\t\t\treturn {\n\t\t\t\t\tchangeInputValue: bindActionCreators(changeInputActionCreator, dispatch),\n\t\t\t\t\ttoggleIsFetching: bindActionCreators(toggleIsFetchingActionCreator, dispatch),\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tcase 'CountrySearch': {\n\t\t\treturn dispatch => {\n\t\t\t\treturn {\n\t\t\t\t\tchangeData: bindActionCreators(changeCountriesDataActionCreator, dispatch),\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tdefault: return undefined;\n\t}\n};\n\nexport default mapDispatchToProps;\n","const mapStateToProps = (component) => {\n\tswitch(component) {\n\t\tcase 'SearchForm': {\n\t\t\treturn state => {\n\t\t\t\treturn {\n\t\t\t\t\tinputValue: state.input.inputValue,\n\t\t\t\t\tisFetching: state.fetching.isFetching,\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'CountrySearch': {\n\t\t\treturn state => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: state.data.countriesData, // Пришло из reducers\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tdefault: return undefined;\n\t}\n};\n\nexport default mapStateToProps;\n","import './ListFilter.css'\r\n\r\nimport React from 'react';\r\n\r\nconst ListFilter = (props) => {\r\n\r\n  return (\r\n    <select className='select' defaultValue=\"50\" onChange={props.onChange}>\r\n      <option value=\"10\">10</option>\r\n      <option value=\"20\">20</option>\r\n      <option value=\"50\">50</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default ListFilter;","const isEng = (text) => {\n  return /[a-z]/i.test(text)\n}\n\nexport default isEng;","const api = {\n  url: 'https://restcountries.eu/rest/v2/'\n}\n\nconst countriesApi = async (value) => {\n  const res = await fetch(`${api.url}name/${value}`);\n  if (!res.ok) {\n    return Promise.reject(`Неверный запрос. Ошибка: ${res.status}`);\n  }\n  return res.json();\n};\n\nexport default countriesApi;","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport BarLoader from \"react-spinners/BarLoader\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-radius: 2px;\n`;\n\nconst Preloader = (props) => {\n\n  return (\n    <div className=\"sweet-loading\">\n      <BarLoader\n        css={override}\n        size={150}\n        color={\"dodgerblue\"}\n        loading={props.loading}\n      />\n    </div>\n  );\n}\n\nexport default Preloader;","import './SearchForm.css'\n\nimport React, { useState } from 'react';\nimport ListFilter from '../ListFilter/ListFilter'\nimport isEng from '../../utils/validators';\nimport cn from 'classnames';\nimport countriesApi from '../../services/countriesApi';\nimport Preloader from '../../commons/Preloader/Preloader';\n\nconst SearchForm = (props) => {\n\n  const { inputValue, changeInputValue, countriesData, toggleIsFetching, isFetching } = props;\n  const [ isActive, setIsActive ] = useState(false);\n\n  const handleInputChange = (event) => {\n    \n    if (!isEng(event.target.value || event.target.value === '')) {\n      return event.target.value.trim() && setIsActive(true);\n    } else {\n      setIsActive(false);\n    }\n\n    changeInputValue(event.target.value)\n\n    toggleIsFetching(true);\n\n    event.target.value === ''\n    ? countriesData.changeData([])\n    : countriesApi(event.target.value)\n      .then(res => {\n        countriesData.changeData(res);\n        toggleIsFetching(false);\n      })\n      .catch(err => {console.log(err)});\n  }\n\n  return (\n    <>\n      <form className='form'>\n      <span className={cn('message-rule', { warn: isActive })}>\n        The text must be typed in Latin letters\n      </span>\n        <input\n          type='text'\n          placeholder='Search...'\n          onChange={handleInputChange}\n          value={inputValue}\n          className='input'\n        />\n        <ListFilter onChange={props.handleListClipping} />\n        <div className='preloader'>\n          { isFetching && <Preloader /> }\n        </div>\n      </form>\n    </>\n  )\n}\nexport default SearchForm;","import { connect } from 'react-redux';\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\nimport mapStateToProps from '../../store/mapStateToProps';\nimport SearchForm from './SearchForm';\n\nconst SearchFormContainer = connect(mapStateToProps('SearchForm'), mapDispatchToProps('SearchForm'))(SearchForm);\n\nexport default SearchFormContainer;","export default __webpack_public_path__ + \"static/media/world.c5689dd1.svg\";","import './WorldMap.css';\nimport world from '../../images/world.svg';\n\nimport React from 'react';\n\nconst WorldMap = (props) => {\n\n  return (\n    <>\n      <img src={world} alt=\"World Map\" className='map-container'/>\n    </>\n  )\n}\n\nexport default WorldMap;","import './CountrySearch.css';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport SearchResult from '../SearchResult/SearchResult';\r\nimport SearchFormContainer from '../SearchForm/SearchFormContainer';\r\nimport WorldMap from '../WorldMap/WorldMap';\r\n\r\nconst CountrySearch = (props) => {\r\n\r\n  const { data } = props\r\n  const [customSelectValue, setCustomSelectValue] = useState('50');\r\n  \r\n  const handleListClipping = (event) => {\r\n    setCustomSelectValue(event.target.value);\r\n    CountriesList.slice(0, `${event.target.value}`);\r\n  };\r\n  \r\n  const CountriesList = data.map(country => (\r\n    <SearchResult country={country} key={country.numericCode} />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div className='search-items'>\r\n        <h1 className='title'>Country Search Service</h1>\r\n\r\n        <SearchFormContainer\r\n          countriesData={props}\r\n          handleListClipping={handleListClipping}\r\n        />\r\n        <ul className='list'>\r\n          {CountriesList.slice(0, `${customSelectValue}`)}\r\n        </ul>\r\n      </div>\r\n      <WorldMap />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountrySearch;\r\n","import { connect } from 'react-redux';\r\nimport CountrySearch from './CountrySearch';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst CountrySearchContainer = connect(mapStateToProps('CountrySearch'), mapDispatchToProps('CountrySearch'))(CountrySearch);\r\n\r\nexport default CountrySearchContainer;","import './App.css';\r\n\r\nimport React from 'react';\r\n\r\nimport CountrySearchContainer from './CountrySearch/CountrySearchContainer';\r\n\r\nconst App = (props) => {\r\n\r\n  return (\r\n    <div className='App'>\r\n      <CountrySearchContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const initialState = {\n  inputValue: '',\n  countriesData: [],\n  isFetching: false,\n};\n\nexport default initialState;","import CHANGE_INPUT_VALUE_ACTION from '../actions/changeInputValueAction';\nimport initialState from '../initialState';\n\nconst inputValueReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_INPUT_VALUE_ACTION:\n      return { ...state, inputValue: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default inputValueReducer;\n","import CHANGE_COUNTRIES_DATA_ACTION from '../actions/changeCountriesDataAction';\nimport initialState from '../initialState';\n\nconst countriesDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_COUNTRIES_DATA_ACTION:\n      return { ...state, countriesData: action.payload };\n              /* Взяли state целиком, раскукожили и заменили\n              в нем значение countriesData значением\n              из changeCountriesDataActionCreator */\n    default:\n      return state;\n  }\n};\n\nexport default countriesDataReducer;\n","import TOGGLE_IS_FETCHING_ACTION from '../actions/toggleIsFetchingAction';\nimport initialState from '../initialState';\n\nconst toggleIsFetchingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_IS_FETCHING_ACTION:\n      return { ...state, isFetching: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default toggleIsFetchingReducer;\n","import { combineReducers } from 'redux';\nimport inputValueReducer from './inputValueReducer';\nimport countriesDataReducer from './countriesDataReducer';\nimport toggleIsFetchingReducer from './toggleIsFetchingReducer';\n\nconst reducers = combineReducers({\n  input: inputValueReducer,\n  data: countriesDataReducer,\n  fetching: toggleIsFetchingReducer,\n});\n\nexport default reducers;","import { createStore } from 'redux';\n\nimport reducers from './reducers/reducers';\n\nconst store = createStore(reducers);\n\nwindow.store = store;\n\nexport default store;\n","// Стили\nimport './index.css';\n\n// Компоненты React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n\n// Компоненты приложения\nimport App from './components/App';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n"],"sourceRoot":""}